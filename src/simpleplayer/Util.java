package simpleplayer;

import battlecode.common.Direction;

import static battlecode.common.Direction.CENTER;

public class Util {

    // static final arrays cost bytecodes to allocate and initialize
    // but static final strings are completely free. Weird, eh?
    private static final String precomputedSqrt
    private static final int[] f = {1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600};

    // returns the floored sqrt of x, for x <= 529 = 23*23
    public static int sqrt(final int x) {
        return precomputedSqrt.charAt(x);
    }

    // precondition: 0 <= i <= 12
    public static int factorial(final int i) {
        return f[i];
    }

    public static int angleBetween(final Direction d1, final Direction d2) {
        if (d1 == CENTER || d2 == CENTER) {
            return 0;
        }
        return (d1.ordinal() - d2.ordinal() + 8) % 8;
    }
}